---
/**
 * Debug Auth State Page
 * Check if auth is working properly
 */
export const prerender = false;

import { supabaseServer } from '../lib/supabase-server';

// Check server-side auth state
let serverUser = null;
let serverIsAdmin = false;
let serverError = null;

try {
  const supabase = supabaseServer(Astro.cookies);
  const { data: { user }, error: userError } = await supabase.auth.getUser();
  
  if (userError) {
    serverError = userError.message;
  } else if (user) {
    serverUser = user;
    
    // Check if admin
    const { data: isAdmin, error: adminError } = await supabase.rpc('is_admin');
    if (adminError) {
      serverError = adminError.message;
    } else {
      serverIsAdmin = isAdmin || false;
    }
  }
} catch (error) {
  serverError = error instanceof Error ? error.message : 'Unknown error';
}
---

<html>
  <head>
    <title>Debug Auth State</title>
    <style>
      body { font-family: system-ui; max-width: 800px; margin: 0 auto; padding: 20px; background: #0a0a0a; color: #f5f5f5; }
      .section { background: #1a1a1a; padding: 20px; margin: 20px 0; border-radius: 8px; }
      .success { border-left: 4px solid #10b981; }
      .error { border-left: 4px solid #ef4444; }
      .warning { border-left: 4px solid #f59e0b; }
      pre { background: #2a2a2a; padding: 10px; border-radius: 4px; overflow-x: auto; }
    </style>
  </head>
  <body>
    <h1>üîç Auth State Debug</h1>
    
    <div class="section">
      <h2>Server-Side Auth State</h2>
      {serverError ? (
        <div class="error">
          <h3>‚ùå Error</h3>
          <p>{serverError}</p>
        </div>
      ) : serverUser ? (
        <div class="success">
          <h3>‚úÖ User Signed In</h3>
          <p><strong>Email:</strong> {serverUser.email}</p>
          <p><strong>ID:</strong> {serverUser.id}</p>
          <p><strong>Is Admin:</strong> {serverIsAdmin ? 'Yes' : 'No'}</p>
        </div>
      ) : (
        <div class="warning">
          <h3>‚ö†Ô∏è No User</h3>
          <p>No user found in server-side auth check</p>
        </div>
      )}
    </div>

    <div class="section">
      <h2>Client-Side Auth State</h2>
      <div id="client-auth-state">
        <p>Loading client-side auth state...</p>
      </div>
    </div>

    <div class="section">
      <h2>Database Schema Check</h2>
      <div id="db-check">
        <p>Checking database schema...</p>
      </div>
    </div>

    <div class="section">
      <h2>Raw Server Data</h2>
      <pre>{JSON.stringify({ serverUser, serverIsAdmin, serverError }, null, 2)}</pre>
    </div>

    <script type="module">
      // Check client-side auth state
      async function checkClientAuth() {
        try {
          const { getSupabase } = await import('/src/lib/supabase-browser');
          const supabase = getSupabase();

          const { data: { user }, error: userError } = await supabase.auth.getUser();
          
          const clientAuthDiv = document.getElementById('client-auth-state');
          
          if (userError) {
            clientAuthDiv.innerHTML = `
              <div class="error">
                <h3>‚ùå Client Error</h3>
                <p>${userError.message}</p>
              </div>
            `;
          } else if (user) {
            // Check if admin
            const { data: isAdmin, error: adminError } = await supabase.rpc('is_admin');
            
            clientAuthDiv.innerHTML = `
              <div class="success">
                <h3>‚úÖ Client User Signed In</h3>
                <p><strong>Email:</strong> ${user.email}</p>
                <p><strong>ID:</strong> ${user.id}</p>
                <p><strong>Is Admin:</strong> ${isAdmin ? 'Yes' : 'No'}</p>
                ${adminError ? `<p><strong>Admin Check Error:</strong> ${adminError.message}</p>` : ''}
              </div>
            `;
          } else {
            clientAuthDiv.innerHTML = `
              <div class="warning">
                <h3>‚ö†Ô∏è No Client User</h3>
                <p>No user found in client-side auth check</p>
              </div>
            `;
          }
        } catch (error) {
          document.getElementById('client-auth-state').innerHTML = `
            <div class="error">
              <h3>‚ùå Client Error</h3>
              <p>${error.message}</p>
            </div>
          `;
        }
      }

      // Check database schema
      async function checkDatabase() {
        try {
          const response = await fetch('/api/verify-db');
          const data = await response.json();
          
          const dbDiv = document.getElementById('db-check');
          
          if (data.status === 'success') {
            dbDiv.innerHTML = `
              <div class="success">
                <h3>‚úÖ Database Schema OK</h3>
                <p>Tables: ${Object.keys(data.tables).join(', ')}</p>
                <p>Policies: ${Object.keys(data.policies).join(', ')}</p>
                <p>Functions: ${Object.keys(data.functions).join(', ')}</p>
              </div>
            `;
          } else {
            dbDiv.innerHTML = `
              <div class="error">
                <h3>‚ùå Database Issues</h3>
                <p>Errors: ${data.errors?.join(', ') || 'Unknown error'}</p>
              </div>
            `;
          }
        } catch (error) {
          document.getElementById('db-check').innerHTML = `
            <div class="error">
              <h3>‚ùå Database Check Failed</h3>
              <p>${error.message}</p>
            </div>
          `;
        }
      }

      // Run checks when page loads
      document.addEventListener('DOMContentLoaded', () => {
        checkClientAuth();
        checkDatabase();
      });
    </script>
  </body>
</html>
