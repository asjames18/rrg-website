---
import Base from '../../layouts/Base.astro';
import { supabaseServer } from '../../lib/supabase-server';

// Check authentication and role
const supabase = supabaseServer(Astro.cookies);
const { data: { user } } = await supabase.auth.getUser();

if (!user) {
  return Astro.redirect('/auth?message=Please sign in to access the CMS');
}

// Check if user has editor or admin role
const { data: userRoles } = await supabase
  .from('user_roles')
  .select('role')
  .eq('user_id', user.id);

const isAdmin = userRoles && userRoles.some(role => role.role === 'admin');
const isEditor = userRoles && userRoles.some(role => ['admin', 'editor'].includes(role.role));

// Get user role for display
const userRole = userRoles && userRoles.length > 0 ? userRoles[0].role : 'user';

if (!isEditor) {
  return Astro.redirect('/auth?message=You need editor permissions to access the CMS');
}
---

<Base title="CMS Dashboard - Real & Raw Gospel">
  <div class="min-h-screen bg-neutral-950">
    <!-- Header -->
    <header class="bg-neutral-900 border-b border-neutral-800">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex items-center justify-between h-16">
          <div class="flex items-center">
            <h1 class="text-2xl font-bold text-amber-100">CMS Dashboard</h1>
            <span class="ml-3 px-3 py-1 bg-amber-900/30 text-amber-200 text-sm rounded-full">
              {userRole}
            </span>
          </div>
          <div class="flex items-center space-x-4">
            <a 
              href="/" 
              class="text-neutral-400 hover:text-amber-400 transition-colors"
            >
              View Site
            </a>
            <a 
              href="/auth" 
              class="bg-neutral-800 hover:bg-neutral-700 text-neutral-200 px-4 py-2 rounded-lg transition-colors"
            >
              Sign Out
            </a>
          </div>
        </div>
      </div>
    </header>

    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
      <!-- Quick Stats -->
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
        <div class="bg-gradient-to-br from-amber-900/20 to-amber-800/10 border border-amber-700/30 rounded-xl p-6">
          <div class="flex items-center justify-between">
            <div>
              <p class="text-amber-200 text-sm font-medium">Total Content</p>
              <p class="text-3xl font-bold text-amber-100" id="total-content">-</p>
            </div>
            <div class="w-12 h-12 bg-amber-700/20 rounded-lg flex items-center justify-center">
              <svg class="w-6 h-6 text-amber-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"/>
              </svg>
            </div>
          </div>
        </div>

        <div class="bg-gradient-to-br from-green-900/20 to-green-800/10 border border-green-700/30 rounded-xl p-6">
          <div class="flex items-center justify-between">
            <div>
              <p class="text-green-200 text-sm font-medium">Published</p>
              <p class="text-3xl font-bold text-green-100" id="published-content">-</p>
            </div>
            <div class="w-12 h-12 bg-green-700/20 rounded-lg flex items-center justify-center">
              <svg class="w-6 h-6 text-green-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
              </svg>
            </div>
          </div>
        </div>

        <div class="bg-gradient-to-br from-blue-900/20 to-blue-800/10 border border-blue-700/30 rounded-xl p-6">
          <div class="flex items-center justify-between">
            <div>
              <p class="text-blue-200 text-sm font-medium">Drafts</p>
              <p class="text-3xl font-bold text-blue-100" id="draft-content">-</p>
            </div>
            <div class="w-12 h-12 bg-blue-700/20 rounded-lg flex items-center justify-center">
              <svg class="w-6 h-6 text-blue-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"/>
              </svg>
            </div>
          </div>
        </div>

        <div class="bg-gradient-to-br from-purple-900/20 to-purple-800/10 border border-purple-700/30 rounded-xl p-6">
          <div class="flex items-center justify-between">
            <div>
              <p class="text-purple-200 text-sm font-medium">Featured</p>
              <p class="text-3xl font-bold text-purple-100" id="featured-content">-</p>
            </div>
            <div class="w-12 h-12 bg-purple-700/20 rounded-lg flex items-center justify-center">
              <svg class="w-6 h-6 text-purple-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z"/>
              </svg>
            </div>
          </div>
        </div>
      </div>

      <!-- Main Content Grid -->
      <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
        <!-- Content Management -->
        <div class="lg:col-span-2">
          <div class="bg-neutral-900 border border-neutral-800 rounded-xl p-6">
            <div class="flex items-center justify-between mb-6">
              <h2 class="text-xl font-bold text-amber-100">Content Management</h2>
              <div class="flex space-x-3">
                <button 
                  id="refresh-content"
                  class="bg-neutral-800 hover:bg-neutral-700 text-neutral-200 px-4 py-2 rounded-lg transition-colors text-sm"
                >
                  Refresh
                </button>
              </div>
            </div>

            <!-- Content Type Tabs -->
            <div class="flex space-x-1 mb-6 bg-neutral-800 rounded-lg p-1">
              <button 
                class="content-tab px-4 py-2 rounded-md text-sm font-medium transition-colors active"
                data-type="all"
              >
                All Content
              </button>
              <button 
                class="content-tab px-4 py-2 rounded-md text-sm font-medium transition-colors"
                data-type="blog"
              >
                Blog
              </button>
              <button 
                class="content-tab px-4 py-2 rounded-md text-sm font-medium transition-colors"
                data-type="video"
              >
                Videos
              </button>
              <button 
                class="content-tab px-4 py-2 rounded-md text-sm font-medium transition-colors"
                data-type="book"
              >
                Books
              </button>
              <button 
                class="content-tab px-4 py-2 rounded-md text-sm font-medium transition-colors"
                data-type="music"
              >
                Music
              </button>
            </div>

            <!-- Content List -->
            <div id="content-list" class="space-y-4">
              <!-- Content items will be loaded here -->
              <div class="text-center py-8">
                <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-amber-500 mx-auto"></div>
                <p class="text-neutral-400 mt-2">Loading content...</p>
              </div>
            </div>

            <!-- Load More Button -->
            <div class="mt-6 text-center">
              <button 
                id="load-more"
                class="bg-amber-700 hover:bg-amber-600 text-white px-6 py-2 rounded-lg transition-colors"
                style="display: none;"
              >
                Load More
              </button>
            </div>
          </div>
        </div>

        <!-- Sidebar -->
        <div class="space-y-6">
          <!-- Quick Actions -->
          <div class="bg-neutral-900 border border-neutral-800 rounded-xl p-6">
            <h3 class="text-lg font-bold text-amber-100 mb-4">Quick Actions</h3>
            <div class="space-y-3">
              <a 
                href="/admin"
                class="w-full bg-amber-700 hover:bg-amber-600 text-white px-4 py-3 rounded-lg transition-colors flex items-center justify-center"
              >
                <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"/>
                </svg>
                Create Content
              </a>
              <a 
                href="/admin"
                class="w-full bg-blue-700 hover:bg-blue-600 text-white px-4 py-3 rounded-lg transition-colors flex items-center justify-center"
              >
                <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"/>
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"/>
                </svg>
                Admin Portal
              </a>
            </div>
          </div>

          <!-- Recent Activity -->
          <div class="bg-neutral-900 border border-neutral-800 rounded-xl p-6">
            <h3 class="text-lg font-bold text-amber-100 mb-4">Recent Activity</h3>
            <div id="recent-activity" class="space-y-3">
              <!-- Activity items will be loaded here -->
              <div class="text-center py-4">
                <div class="animate-spin rounded-full h-6 w-6 border-b-2 border-amber-500 mx-auto"></div>
                <p class="text-neutral-400 mt-2 text-sm">Loading activity...</p>
              </div>
            </div>
          </div>

          <!-- Media Library -->
          <div class="bg-neutral-900 border border-neutral-800 rounded-xl p-6">
            <div class="flex items-center justify-between mb-4">
              <h3 class="text-lg font-bold text-amber-100">Media Library</h3>
              <a 
                href="/cms/media"
                class="text-amber-400 hover:text-amber-300 text-sm transition-colors"
              >
                View All
              </a>
            </div>
            <div class="text-center py-4">
              <svg class="w-8 h-8 text-neutral-600 mx-auto mb-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"/>
              </svg>
              <p class="text-neutral-400 text-sm">Media library coming soon</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <script>
    // CMS Dashboard JavaScript
    let currentType = 'all';
    let currentOffset = 0;
    const limit = 10;

    // Load stats
    async function loadStats() {
      try {
        const response = await fetch('/api/cms/stats');
        const stats = await response.json();
        
        document.getElementById('total-content').textContent = stats.total.content;
        document.getElementById('published-content').textContent = stats.total.published;
        document.getElementById('draft-content').textContent = stats.total.drafts;
        document.getElementById('featured-content').textContent = stats.total.featured;
      } catch (error) {
        console.error('Error loading stats:', error);
      }
    }

    // Load content
    async function loadContent(type = 'all', offset = 0, append = false) {
      try {
        const params = new URLSearchParams({
          type,
          limit: limit.toString(),
          offset: offset.toString()
        });

        const response = await fetch(`/api/cms/content?${params}`);
        const data = await response.json();

        const contentList = document.getElementById('content-list');
        
        if (!append) {
          contentList.innerHTML = '';
        }

        if (data.content.length === 0 && offset === 0) {
          contentList.innerHTML = `
            <div class="text-center py-8">
              <svg class="w-12 h-12 text-neutral-600 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"/>
              </svg>
              <h3 class="text-lg font-medium text-neutral-300 mb-2">No content found</h3>
              <p class="text-neutral-400 mb-4">Get started by creating your first piece of content.</p>
              <a href="/admin" class="inline-flex items-center gap-2 bg-amber-700 hover:bg-amber-600 text-white px-4 py-2 rounded-lg transition-colors">
                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"/>
                </svg>
                Create Content
              </a>
            </div>
          `;
          return;
        }

        data.content.forEach(item => {
          const contentItem = document.createElement('div');
          contentItem.className = 'bg-neutral-800 border border-neutral-700 rounded-lg p-4 hover:border-amber-700 transition-colors';
          
          const statusColor = {
            published: 'text-green-400',
            draft: 'text-blue-400',
            review: 'text-yellow-400',
            archived: 'text-neutral-400'
          }[item.status] || 'text-neutral-400';

          const typeIcon = {
            blog: '📝',
            video: '🎥',
            book: '📚',
            music: '🎵'
          }[item.content_type] || '📄';

          contentItem.innerHTML = `
            <div class="flex items-start justify-between">
              <div class="flex-1">
                <div class="flex items-center gap-2 mb-2">
                  <span class="text-lg">${typeIcon}</span>
                  <h3 class="text-lg font-medium text-amber-100">${item.title}</h3>
                  ${item.featured ? '<span class="px-2 py-1 bg-amber-900/30 text-amber-200 text-xs rounded-full">Featured</span>' : ''}
                </div>
                <p class="text-neutral-300 text-sm mb-2">${item.summary || 'No summary available'}</p>
                <div class="flex items-center gap-4 text-sm text-neutral-400">
                  <span class="${statusColor}">${item.status}</span>
                  <span>${new Date(item.updated_at).toLocaleDateString()}</span>
                  <span>${item.content_type}</span>
                </div>
              </div>
              <div class="flex items-center gap-2 ml-4">
                <button 
                  onclick="editContent('${item.id}')"
                  class="bg-neutral-700 hover:bg-neutral-600 text-neutral-200 px-3 py-1 rounded text-sm transition-colors"
                >
                  Edit
                </button>
                <button 
                  onclick="deleteContent('${item.id}')"
                  class="bg-red-700 hover:bg-red-600 text-white px-3 py-1 rounded text-sm transition-colors"
                >
                  Delete
                </button>
              </div>
            </div>
          `;
          
          contentList.appendChild(contentItem);
        });

        // Show/hide load more button
        const loadMoreBtn = document.getElementById('load-more');
        if (data.pagination.hasMore) {
          loadMoreBtn.style.display = 'block';
          loadMoreBtn.onclick = () => loadContent(currentType, currentOffset + limit, true);
        } else {
          loadMoreBtn.style.display = 'none';
        }

        currentOffset = offset;
      } catch (error) {
        console.error('Error loading content:', error);
        document.getElementById('content-list').innerHTML = `
          <div class="text-center py-8">
            <p class="text-red-400">Error loading content. Please try again.</p>
          </div>
        `;
      }
    }

    // Load recent activity
    async function loadActivity() {
      try {
        const response = await fetch('/api/cms/activity');
        
        if (!response.ok) {
          throw new Error(`HTTP ${response.status}: ${response.statusText}`);
        }
        
        const activities = await response.json();
        const activityList = document.getElementById('recent-activity');
        
        // Handle case where activities is not an array
        if (!Array.isArray(activities)) {
          activityList.innerHTML = '<p class="text-neutral-400 text-sm">No recent activity</p>';
          return;
        }
        
        if (activities.length === 0) {
          activityList.innerHTML = '<p class="text-neutral-400 text-sm">No recent activity</p>';
          return;
        }

        activityList.innerHTML = activities.slice(0, 5).map(activity => `
          <div class="flex items-start gap-3">
            <div class="w-2 h-2 bg-amber-500 rounded-full mt-2"></div>
            <div class="flex-1">
              <p class="text-sm text-neutral-300">${activity.action || 'Activity'} ${activity.content?.title || 'content'}</p>
              <p class="text-xs text-neutral-500">${new Date(activity.created_at).toLocaleString()}</p>
            </div>
          </div>
        `).join('');
      } catch (error) {
        console.error('Error loading activity:', error);
        const activityList = document.getElementById('recent-activity');
        activityList.innerHTML = '<p class="text-neutral-400 text-sm">Unable to load activity</p>';
      }
    }

    // Edit content - redirect to direct edit page
    function editContent(id) {
      window.location.href = `/cms/edit/${id}`;
    }

    // Make editContent globally available
    window.editContent = editContent;

    // Delete content
    async function deleteContent(id) {
      if (!confirm('Are you sure you want to delete this content?')) return;
      
      try {
        const response = await fetch(`/api/cms/content?id=${id}`, {
          method: 'DELETE'
        });
        
        if (response.ok) {
          loadContent(currentType, 0, false);
          loadStats();
        } else {
          alert('Error deleting content');
        }
      } catch (error) {
        console.error('Error deleting content:', error);
        alert('Error deleting content');
      }
    }

    // Make deleteContent globally available
    window.deleteContent = deleteContent;

    // Tab switching
    document.querySelectorAll('.content-tab').forEach(tab => {
      tab.addEventListener('click', () => {
        // Update active tab
        document.querySelectorAll('.content-tab').forEach(t => t.classList.remove('active', 'bg-amber-700', 'text-white'));
        tab.classList.add('active', 'bg-amber-700', 'text-white');
        
        // Load content for new type
        currentType = tab.dataset.type;
        currentOffset = 0;
        loadContent(currentType, 0, false);
      });
    });

    // Initialize
    document.addEventListener('DOMContentLoaded', () => {
      loadStats();
      loadContent();
      loadActivity();
      
      // Refresh button
      document.getElementById('refresh-content').addEventListener('click', () => {
        loadStats();
        loadContent(currentType, 0, false);
        loadActivity();
      });
    });
  </script>

  <style>
    .content-tab.active {
      @apply bg-amber-700 text-white;
    }
    
    .content-tab:not(.active) {
      @apply text-neutral-400 hover:text-neutral-200;
    }
  </style>
</Base>

