---
/**
 * User Profile Page
 * Visit: http://localhost:4321/profile
 * 
 * Users can view and manage their profile, settings, and activity
 * Admins can manage user roles and permissions
 */
import Base from '../layouts/Base.astro';
import ProfileCard from '../components/ProfileCard';
import UserActivity from '../components/UserActivity';
import UserManagement from '../components/UserManagement';
---

<Base title="Profile | Real & Raw Gospel">
  <div class="min-h-screen bg-gradient-to-br from-black via-neutral-900 to-black">
    <div class="container mx-auto px-4 py-12 md:py-16">
      <div class="max-w-6xl mx-auto">
        <!-- Page Header -->
        <div class="text-center mb-12">
          <h1 class="text-4xl md:text-5xl font-bold text-amber-100 mb-6 font-display">
            Your Profile
          </h1>
          <p class="text-xl text-neutral-300 max-w-2xl mx-auto">
            Manage your account settings, view your activity, and access exclusive content.
          </p>
        </div>

        <!-- Profile Overview -->
        <div class="mb-12">
          <div id="user-profile-overview">
            <ProfileCard client:load />
          </div>
        </div>

        <!-- Profile Tabs -->
        <div class="bg-neutral-900/50 backdrop-blur-sm border border-neutral-700/50 rounded-2xl p-8">
          <!-- Tab Navigation -->
          <div class="flex flex-wrap gap-2 mb-8 bg-neutral-800/50 rounded-lg p-1">
            <button 
              id="profile-tab" 
              class="px-4 py-2 rounded-md text-sm font-medium transition-all duration-200 bg-amber-600 text-white shadow-lg"
            >
              Profile Settings
            </button>
            <button 
              id="activity-tab" 
              class="px-4 py-2 rounded-md text-sm font-medium transition-all duration-200 text-neutral-400 hover:text-neutral-200"
            >
              Activity
            </button>
            <button 
              id="preferences-tab" 
              class="px-4 py-2 rounded-md text-sm font-medium transition-all duration-200 text-neutral-400 hover:text-neutral-200"
            >
              Preferences
            </button>
            <button 
              id="admin-tab" 
              class="px-4 py-2 rounded-md text-sm font-medium transition-all duration-200 text-neutral-400 hover:text-neutral-200 hidden"
            >
              Admin Panel
            </button>
          </div>

          <!-- Tab Content -->
          <div id="tab-content">
            <!-- Profile Settings Tab -->
            <div id="profile-content" class="tab-panel">
              <div class="space-y-8">
                <div>
                  <h3 class="text-2xl font-bold text-amber-100 mb-6 font-display">Account Information</h3>
                  <div class="bg-neutral-800/50 border border-neutral-700/50 rounded-xl p-6">
                    <div class="grid md:grid-cols-2 gap-6">
                      <div>
                        <label class="block text-sm font-medium text-neutral-200 mb-2">Email Address</label>
                        <input 
                          type="email" 
                          id="profile-email"
                          class="w-full px-4 py-3 bg-neutral-700/50 border border-neutral-600/50 rounded-lg text-neutral-100 focus:outline-none focus:ring-2 focus:ring-amber-500/50 focus:border-amber-500/50 transition-all duration-200"
                          readonly
                        />
                      </div>
                      <div>
                        <label class="block text-sm font-medium text-neutral-200 mb-2">Account Created</label>
                        <input 
                          type="text" 
                          id="profile-created"
                          class="w-full px-4 py-3 bg-neutral-700/50 border border-neutral-600/50 rounded-lg text-neutral-100 focus:outline-none focus:ring-2 focus:ring-amber-500/50 focus:border-amber-500/50 transition-all duration-200"
                          readonly
                        />
                      </div>
                    </div>
                  </div>
                </div>

                <div>
                  <h3 class="text-2xl font-bold text-amber-100 mb-6 font-display">Security</h3>
                  <div class="bg-neutral-800/50 border border-neutral-700/50 rounded-xl p-6">
                    <div class="space-y-4">
                      <div class="flex items-center justify-between">
                        <div>
                          <h4 class="text-lg font-semibold text-neutral-100">Password</h4>
                          <p class="text-sm text-neutral-400">Last updated: Never</p>
                        </div>
                        <button class="bg-amber-700 hover:bg-amber-600 text-white font-semibold px-4 py-2 rounded-lg transition-colors">
                          Change Password
                        </button>
                      </div>
                      <div class="flex items-center justify-between">
                        <div>
                          <h4 class="text-lg font-semibold text-neutral-100">Two-Factor Authentication</h4>
                          <p class="text-sm text-neutral-400">Add an extra layer of security</p>
                        </div>
                        <button class="bg-neutral-700 hover:bg-neutral-600 text-neutral-200 font-semibold px-4 py-2 rounded-lg transition-colors">
                          Enable 2FA
                        </button>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>

            <!-- Activity Tab -->
            <div id="activity-content" class="tab-panel hidden">
              <div id="user-activity">
                <UserActivity client:load />
              </div>
            </div>

            <!-- Preferences Tab -->
            <div id="preferences-content" class="tab-panel hidden">
              <div class="space-y-8">
                <div>
                  <h3 class="text-2xl font-bold text-amber-100 mb-6 font-display">Display Preferences</h3>
                  <div class="bg-neutral-800/50 border border-neutral-700/50 rounded-xl p-6">
                    <div class="space-y-6">
                      <div class="flex items-center justify-between">
                        <div>
                          <h4 class="text-lg font-semibold text-neutral-100">Theme</h4>
                          <p class="text-sm text-neutral-400">Choose your preferred theme</p>
                        </div>
                        <select class="bg-neutral-700 border border-neutral-600 text-neutral-200 px-4 py-2 rounded-lg focus:outline-none focus:ring-2 focus:ring-amber-500/50">
                          <option value="dark">Dark (Default)</option>
                          <option value="light">Light</option>
                          <option value="auto">Auto</option>
                        </select>
                      </div>
                      <div class="flex items-center justify-between">
                        <div>
                          <h4 class="text-lg font-semibold text-neutral-100">Sacred Names</h4>
                          <p class="text-sm text-neutral-400">Show sacred names in content</p>
                        </div>
                        <label class="relative inline-flex items-center cursor-pointer">
                          <input type="checkbox" class="sr-only peer" checked>
                          <div class="w-11 h-6 bg-neutral-600 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-amber-300/20 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-amber-600"></div>
                        </label>
                      </div>
                    </div>
                  </div>
                </div>

                <div>
                  <h3 class="text-2xl font-bold text-amber-100 mb-6 font-display">Notifications</h3>
                  <div class="bg-neutral-800/50 border border-neutral-700/50 rounded-xl p-6">
                    <div class="space-y-4">
                      <div class="flex items-center justify-between">
                        <div>
                          <h4 class="text-lg font-semibold text-neutral-100">Email Notifications</h4>
                          <p class="text-sm text-neutral-400">Receive updates about new content</p>
                        </div>
                        <label class="relative inline-flex items-center cursor-pointer">
                          <input type="checkbox" class="sr-only peer" checked>
                          <div class="w-11 h-6 bg-neutral-600 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-amber-300/20 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-amber-600"></div>
                        </label>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>

            <!-- Admin Panel Tab -->
            <div id="admin-content" class="tab-panel hidden">
              <div class="space-y-8">
                <div>
                  <h3 class="text-2xl font-bold text-amber-100 mb-6 font-display">User Management</h3>
                  <div id="admin-user-management">
                    <UserManagement client:load />
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</Base>

<script>
  // Tab switching functionality
  document.addEventListener('DOMContentLoaded', () => {
    const tabs = ['profile', 'activity', 'preferences', 'admin'];
    const tabButtons = tabs.map(id => document.getElementById(`${id}-tab`));
    const tabContents = tabs.map(id => document.getElementById(`${id}-content`));

    // Tab click handlers
    tabButtons.forEach((button, index) => {
      button?.addEventListener('click', () => {
        // Remove active state from all tabs
        tabButtons.forEach(btn => {
          btn?.classList.remove('bg-amber-600', 'text-white', 'shadow-lg');
          btn?.classList.add('text-neutral-400', 'hover:text-neutral-200');
        });
        
        // Hide all content
        tabContents.forEach(content => {
          content?.classList.add('hidden');
        });

        // Activate clicked tab
        button?.classList.add('bg-amber-600', 'text-white', 'shadow-lg');
        button?.classList.remove('text-neutral-400', 'hover:text-neutral-200');
        tabContents[index]?.classList.remove('hidden');
      });
    });

    // Load user profile data
    loadUserProfile();
  });

  async function loadUserProfile() {
    try {
      const { createClient } = await import('@supabase/supabase-js');
      const supabaseUrl = 'https://lebumzszhhjlpflqgity.supabase.co';
      const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImxlYnVtenN6aGhqbHBmbHFnaXR5Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTk0OTk5NjgsImV4cCI6MjA3NTA3NTk2OH0.2XeY7OXkEfXiG_qwlSRN5rNE2gbZde42v4KfTrmctSs';
      const supabase = createClient(supabaseUrl, supabaseKey);

      const { data: { user } } = await supabase.auth.getUser();
      
      if (user) {
        // Populate profile fields
        const emailField = document.getElementById('profile-email');
        const createdField = document.getElementById('profile-created');
        
        if (emailField) (emailField as HTMLInputElement).value = user.email || '';
        if (createdField) {
          const createdDate = new Date(user.created_at).toLocaleDateString('en-US', {
            year: 'numeric',
            month: 'long',
            day: 'numeric'
          });
          (createdField as HTMLInputElement).value = createdDate;
        }

        // Check if user is admin and show admin tab
        const { data: profile } = await supabase
          .from('profiles')
          .select('role')
          .eq('id', user.id)
          .single();

        if (profile?.role === 'admin') {
          const adminTab = document.getElementById('admin-tab');
          adminTab?.classList.remove('hidden');
        }
      } else {
        // Redirect to auth page if not signed in
        window.location.href = '/auth';
      }
    } catch (error) {
      console.error('Failed to load user profile:', error);
    }
  }
</script>
